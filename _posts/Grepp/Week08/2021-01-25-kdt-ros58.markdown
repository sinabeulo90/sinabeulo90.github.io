---
layout: post
title:  "허프변환 기반 차선 인식"
date:   2021-01-25 01:00:00 +0900
categories: "Grepp/KDT"
tag: OpenCV
plugins: mathjax
---

## 영상에서 차선 찾아내기

허프변환(Hough Transform)을 이용한 차선 추출

1. grayscale
2. blur
3. canny edge
4. ROI
5. hough transform
6. merge



## Image Space vs. Parameter Space

- Image Space($x$, $y$ 좌표계)
- Parameter Space(기울기 $m$, $y$절편 $b$ 좌표계)

![Image Space vs. Parameter Space.png](/assets/grepp/image_space_parameter_space.png)



### Image Space의 직선

Image Space에서의 직선은 Parameter Space에서 점으로 표현할 수 있다. 기울기와 $y$절편만 알면 Image Space에서 직선을 그릴 수 있다.



### Image Space의 점

Image Space에서의 점은 Parameter Space에서 직선으로 표현할 수 있다. 그 직선은 Image Space에서 ($x_1$, $y_1$) 점을 지나는 모든 직선을 의미한다.



### Parameter Space의 교점

Image Space에서 두 점의 표현은 Parameter Space에서 두 직선으로 표현된다. 이때, Parameter Space에서 두 직선의 교점은 $m$과 $b$가 같은 경우에 생기므로, 이는 Image Space에서는 두 점을 지나는 직선을 의미한다.

이를 이용하면, 직선을 찾을 수 있다. Canny를 통해 edge를 찾고, 그 edge의 점을 Parameter Space로 표현한 후 직선의 교점이 많을 수록, 해당 교점이 의미하는 Image Space의 직선이 존재할 가능성이 높다는 의미가 되기 때문이다.

![Line Detect](/assets/grepp/line_detect.jpg)



### Parameter Space의 한계

기울기가 무한대인 직선은 표현하기 어렵다. 즉 수직인 직선은 $m$값이 무한대가 되므로, Hough Space라는 특별한 좌표계를 사용하게 된다.



## Hough Space

원점에서 직선에 대한 수선의 발을 내릴 때, 원점과 직선과의 거리를 로우 $\rho$라고 하고, 수선과 $x$축과의 각도 $\theta$라고 표현하면, $\rho$, $\theta$으로 이루어진 좌표계를 Hough Space라고 한다.

이 좌표계에서는 기울기가 무한대인 수직 직선 표현이 가능하면서, 이 이외의 Parameter Space의 속성을 모두 갖고 있다. 즉 Hough Space에서 직선이 많이 겹치는 교점일 수록, Image Space에서 직선이 존재할 확률이 높다.

![Hough Space](/assets/grepp/hough_transform.png)



### Hough Space의 점

Parameter Space와 마찬가지로, Hough Space의 점은 Image Space에서의 직선을 의미한다.



### Hough Space의 곡선

Hough Space에서는 Image Space의 점이 곡선으로 표현된다.



## Hough Transform

예를 들어 Image Space의 3개의 점이 있다고 할 때, $theta$가 0, 30, 60, 90, 120, 150도 일때 각 점의 $\rho$ 값을 구하면, 이 값으로 Hough Space에 곡선으로 표시할 수 있다. Hough Space의 곡선들이 만다는 교점이 Image Space에서 3개 점을 모두 지나는 직선임을 알 수 있다. 물론 $\theta$, $\rho$의 범위, 직선이라고 간주하는 오차범위에 따라 연산량과 정확도의 차이가 있을 것이다.


### Hough Transform을 이용한 직선 검출 방식

1. 입력 영상을 흑백 Grayscale 변환 처리
2. Canny Edge 처리로 외곽선 영상을 획득
3. $\rho$, $\theta$ 간격 설정
4. 외곽선 점들에 대해서 $(\rho, \theta)$ 좌표값 구하기
5. 오차범위 내의 $(\rho, \theta)$ 좌표값을 갖는 외곽선 점들이 하나의 직선을 구성한다고 판정



### HoughLines 함수

`cv2.HoughLines(image, rho, theta, threshold)`

- image: 8bit, 흑백 이미지
- rho: hough space에서 얼마만큼 $\rho$를 증가시키면서 조사할 것인가
- theta: hough space에서 얼마만큼 $\theta$를 증가시키면서 조사할 것인가
- threshold: hough space에서 threshold 이상의 직선이 겹치는 교점은 하나의 직선을 형성한다고 판단
    - threshold가 높을 경우: 직선으로 인정하는 규정이 까다롭기 때문에, 검출되는 직선은 적지만 확실한 직선들이 검출
    - threshold가 낮을 경우: 직선으로 인정하는 규정이 후하기 때문에, 많은 직선이 검출되지만 불확실한 직선들도 검출
- **검출된 직선의 $rho$, $theta$ 반환**
- **직선 검출**


`cv2.HoughLinesP(image, rho, theta, threshold, minLineLength, maxLineGap)`

- minLineLength: 선분의 최소 길이
    - minLineLength보다 짧은 선분은 버림
- maxLineGap: 간격의 최대 길이
    - maxLineGap보다 작은 간격은 하나의 선분으로 간주
    - 이 값을 넘어서 떨어져 있는 선분은 각각 다른 선분으로 간주
- **검출된 선분의 시작점과 끝점의 좌표 반환**
- **시작점과 끝점이 있는 선분 검출**



### 허프 변환을 이용하는 차선 찾기

1. Image Read: 카메라 영상 신호들을 이미지로 읽기
2. GrayScale: 흑백 이미지로 변환
3. Gaussian Blur: 노이즈 제거
4. Canny: Edge 검출
5. ROI: 관심 영역 잘라내기
6. HoughLinesP: 선분 검출
