---
layout: post
title:  "[실습] 명도차 기반 차선 인식 주행"
date:   2021-01-21 01:00:00 +0900
categories: "Grepp/KDT"
tag: ROS
---

## 실제 트랙에서 차선을 벗어나지 않고 주행

카메라로 촬영한 차량 전방의 도로 영상을 OpenCV를 이용하여 명도차 기반으로 차선을 찾고, 양쪽 차선의 위치를 따져서 핸들을 얼마나 꺽을지 조향각을 결정



## 차선 인식 주행을 위해 필요한 것들

1. 카메라 입력 데이터에서 프레임 취득
2. 얻어낸 영상 데이터를 처리하여 차선 위치를 결정
    - 색 변환: BGR ---> HSV 변환
    - 이진화: 특정 명도 범위를 가지고 영상을 흰색과 검은색으로만 표시되도록 변환
    - 관심 영역(ROI) 잘라내기
3. 차선 검출: 흰색 점들이 모여 있는 곳의 좌표 계산
    - 검출한 차선 위치에 도형(사각형)을 그려서 차선 검출 결과 확인
4. 차선의 중앙을 차량이 달리도록, 차선 위치를 기준으로 조향각 결정
5. 결정한 조향각에 따라 모터 제어 메시지를 전송하여, 조향 모터를 제어



## 명도 대비만으로 차선 검출?

명도의 대비만으로 차선을 검출하기가 쉽지 않으므로, 현재 취득한 영상의 특성에 따라 이진화 기준을 달리해야 할 필요가 있다.

- 차선 검출을 위한 명도 하한을 ROI 전체의 평균을 기준으로 설정한다면 어떨까?
- 명도 기준의 인식과 윤곽선 추출을 함꼐 적용한다면 어떨까?
    1. 윤곽선 검출 결과 경계가 존재하는 곳을 찾고,
    2. 그 부근의 영역에 차선일 것 같은 부분이 존재하는지 확인



## 양쪽 차선을 모두 찾아야 할까?

늘 왼쪽과 오른쪽 차선이 보이는 것은 아니므로, 상황을 구분하여 왼쪽과 오른쪽 차선을 인지할 필요가 있다.

- 조금 전에 차선이 있던 곳에 가상의 차선이 있는 것으로 한다면 어떨까?
    1. 왼쪽 차선을 잃어버린 경우
    2. 오른쪽 차선을 잃어버린 경우
    3. 양쪽 차선을 모두 잃어버린 경우
- 한쪽 차선을 찾으면 거기서 일정 거리만큼 떨어져 있는 다른 차선이 있다고 하면 어떨까?
    1. 영상의 맨 끝을 차선의 위치로 설정할 경우
    2. 영상 밖의 위치를 찾아서 설정할 경우



## 조향 및 속도 제어

- 조향각 제어
    - 직선 차로: 정면으로 직진
    - 곡선 차로: 차로가 휘어진 방향으로 조향, 적절한 조향각 설정 필요
- 속도 제어
    - 직선 차로: 보다 좋은 랩 타입 기록을 위해 빠르게 주행
    - 곡선 차로: 차선 이탈 방지를 위해, 적절히 느리게 주행



## 조향각의 설정

- 인식된 양쪽 차선의 중점
    - 화면 중앙에 있는 가상의 지점의 거리에 따라 조향 정도를 설정
    - 카메라가 가운데를 바라보도록 조정
    - 몇 픽셀에 1도씩 꺽어야 할까?
- 속도가 너무 높거나 조향제어가 늦으면 차선 이탈의 위험이 있음
- 한번 이탈하고 나면 돌아오기 어려움



## 가까운 곳을 봐야 할까, 먼 곳을 봐야 할까?

차선을 보고 난 후에 핸들을 꺾을 때 까지는 시간이 걸리므로, 주행 속도에 따라 가까운 곳과 먼 곳을 바라봐야 하는 경우가 달라진다.



## 그럼 가까운 곳부터 먼 곳까지 두루 살표야 할까?

S자 곡선과 같은 경우엔 미리 더 먼 거리의 차선을 봐야 할 경우도 생각할 수 있다.
- 많이 먼 거리 차선 + 조금 먼거리 차선 + 가까운 거리 차선
