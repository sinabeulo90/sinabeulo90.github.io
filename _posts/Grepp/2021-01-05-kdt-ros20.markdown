---
layout: post
title:  "Xycar 자율주행 프로젝트 예시"
date:   2021-01-05 01:00:00 +0900
categories:
    - "Grepp/KDT"
tags:
    - Xycar
---

## 자율주행 소프트웨어

일반적으로 `규칙 기반 주행 모델`과 `학습 기반 주행 모델`을 결합해서 자율주행 소프트웨어를 구현한다. 각 종류의 주행 모델마다 잘 할 수 있는 영역이 있기 때문이다.

1. 규칙 기반 주행모델(Rule-based Approach)
- 주행 과정 중 발생 가능한 다양한 상황을 정교하게 규칙으로 모델링
- 다양한 상황을 사전에 예측하여 각 상황 별 대응 방법을 사전에 정의하여 규칙으로 모델링 함
- 개발 비용이 높고 모델 검증에 오랜 시간이 걸림
- 차량 관련 전문가가 중심이 되어 모델을 구축하고 지속적인 업데이트를 통해 정교화
- 모델 검증을 위한 오랜 시간의 반복 실험 소요, 오류 발생 시 모델의 수정, 재검증 과정이 동반됨
- ex. 차간 거리 유지: 전방 차량 간 거리 3m 이상으로 유지하며 가/감속
- ex. 차선 변경: 차선 변경 시 측후면 차량 및 전방 차량과 거리 10m 이상 확보 후 차선 변경 시도

2. 학습기반 주행모델
    1. Deep Learning
    - 인간의 주행 과정을 데이터화하여 인공지능이 주행 방법을 학습
    - 사람이 운전을 반복하며 익속해져 가는 과정과 유사
    - 인공지능이 주행을 지속할 수록 다양한 상황에서의 대응 방법을 학습하고 터득함

    2. Reinforcement Learning
    - 반복학습을 통해 인공지능이 다양한 주행 상황 별 대응 방법을 스스로 터득
    - 수많은 반복 학습 과정을 통해 최적의 대응 방법을 스스로 깨우침
    - 학습 과정에서 일일이 방법을 정의할 필요 없이 상황 별 달성 목표와 보상만 정의함
    - ex. 신호등 없는 교차로 주행 방법 학습



## Xycar를 활용하여 할 수 있는 프로젝트

1. 머신러닝 YOLO 활용 자율주행
- Yolo v2 모델을 적용하여, 전방 상황을 보고 현재 어떤 미션을 수행해야 하는지 파악
- ex. 3/4구 신호등, 회전 로터리, 언덕, 3차선 등

2. 강화학습 기반 자율주행
- 가장 기본적인 강화학습 모델인 DQN을 적용하여, 시뮬레이터에서 벽과 충돌하지 않고 빠르게 주행하도록 만들기
- 많은 회수의 반복 주행 및 적절한 보상값 부여

3. End-to-End 자율주행
- 주행 영상과 조향각 데이터를 지도 학습
- MIT 대학의 자율주행 class의 자료를 참조하여 작업할 수 있음

4. Adaptive Cruise Control: 추돌 방지 자율주행

5. PID 제어
- 차량이 흔들거리면서 주행하지 않도록 제어
- 급정거, 급출발 방지

6. AR Tag 기반의 주차
- AR Tag를 보고 자동차의 자세를 파악하여 똑바로 주차
- 아마존 물류센터에서 로봇의 위치 보정에도 사용

7. YOLO 활용 자율주행: 사람을 찾고 그 사람을 쫓아가는 주행

8. 직각/평행 주차
- 빈공간을 확인하여 주차 가능 여부를 판단하고 신속하고 정확하게 주차

9. Lidar 기반 복도 주행: 최대한 빠르게 주행

10. 앞차 따라가기 주행
- 앞에서 달리는 차량이 지나간 경로를 따라서 주행
- 머신러닝 오브젝트 인식 + 앞 차의 이동 궤적 파악
- ex. 트럭의 군집주행

11. 비보호 좌회전: 규칙/학습 기반

12. 고속 코너링(드리프트 주행)
- [Stanford University's Dynamic Design Lab presents the world's first autonomous figure 8 drift](https://youtu.be/nTK56vPb8Zo)
- [Autonomous Drifting using Machine Learning](https://youtu.be/opsmd5yuBF0)

